/* soapChinaStockWebServiceSoapService.cpp
   Generated by gSOAP 2.8.14 from stock.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapChinaStockWebServiceSoapService.h"

ChinaStockWebServiceSoapService::ChinaStockWebServiceSoapService()
{	ChinaStockWebServiceSoapService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ChinaStockWebServiceSoapService::ChinaStockWebServiceSoapService(const struct soap &_soap) : soap(_soap)
{ }

ChinaStockWebServiceSoapService::ChinaStockWebServiceSoapService(soap_mode iomode)
{	ChinaStockWebServiceSoapService_init(iomode, iomode);
}

ChinaStockWebServiceSoapService::ChinaStockWebServiceSoapService(soap_mode imode, soap_mode omode)
{	ChinaStockWebServiceSoapService_init(imode, omode);
}

ChinaStockWebServiceSoapService::~ChinaStockWebServiceSoapService()
{ }

void ChinaStockWebServiceSoapService::ChinaStockWebServiceSoapService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://WebXml.com.cn/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
};

void ChinaStockWebServiceSoapService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ChinaStockWebServiceSoapService::reset()
{	destroy();
	soap_done(this);
	soap_init(this);
	ChinaStockWebServiceSoapService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
ChinaStockWebServiceSoapService *ChinaStockWebServiceSoapService::copy()
{	ChinaStockWebServiceSoapService *dup = SOAP_NEW_COPY(ChinaStockWebServiceSoapService(*(struct soap*)this));
	return dup;
}
#endif

int ChinaStockWebServiceSoapService::soap_close_socket()
{	return soap_closesock(this);
}

int ChinaStockWebServiceSoapService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int ChinaStockWebServiceSoapService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int ChinaStockWebServiceSoapService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int ChinaStockWebServiceSoapService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int ChinaStockWebServiceSoapService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void ChinaStockWebServiceSoapService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ChinaStockWebServiceSoapService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ChinaStockWebServiceSoapService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void ChinaStockWebServiceSoapService::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *ChinaStockWebServiceSoapService::soap_header()
{	return this->header;
}

int ChinaStockWebServiceSoapService::run(int port)
{	if (soap_valid_socket(this->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->error;
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET ChinaStockWebServiceSoapService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET ChinaStockWebServiceSoapService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int ChinaStockWebServiceSoapService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif

int ChinaStockWebServiceSoapService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if (dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns1__getStockImageByCode(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImageByteByCode(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImage_USCOREkByCode(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImage_USCOREkByteByCode(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockInfoByCode(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImageByCode_(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImageByteByCode_(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImage_USCOREkByCode_(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockImage_USCOREkByteByCode_(ChinaStockWebServiceSoapService*);
static int serve___ns1__getStockInfoByCode_(ChinaStockWebServiceSoapService*);

int ChinaStockWebServiceSoapService::dispatch()
{	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImageByCode"))
		return serve___ns1__getStockImageByCode(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImageByteByCode"))
		return serve___ns1__getStockImageByteByCode(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImage_kByCode"))
		return serve___ns1__getStockImage_USCOREkByCode(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImage_kByteByCode"))
		return serve___ns1__getStockImage_USCOREkByteByCode(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockInfoByCode"))
		return serve___ns1__getStockInfoByCode(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImageByCode"))
		return serve___ns1__getStockImageByCode_(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImageByteByCode"))
		return serve___ns1__getStockImageByteByCode_(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImage_kByCode"))
		return serve___ns1__getStockImage_USCOREkByCode_(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockImage_kByteByCode"))
		return serve___ns1__getStockImage_USCOREkByteByCode_(this);
	if (!soap_match_tag(this, this->tag, "ns1:getStockInfoByCode"))
		return serve___ns1__getStockInfoByCode_(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns1__getStockImageByCode(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImageByCode soap_tmp___ns1__getStockImageByCode;
	_ns1__getStockImageByCodeResponse ns1__getStockImageByCodeResponse;
	ns1__getStockImageByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImageByCode(soap, &soap_tmp___ns1__getStockImageByCode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImageByCode(soap, &soap_tmp___ns1__getStockImageByCode, "-ns1:getStockImageByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImageByCode(soap_tmp___ns1__getStockImageByCode.ns1__getStockImageByCode, &ns1__getStockImageByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImageByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImageByCodeResponse.soap_put(soap, "ns1:getStockImageByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImageByCodeResponse.soap_put(soap, "ns1:getStockImageByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImageByteByCode(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImageByteByCode soap_tmp___ns1__getStockImageByteByCode;
	_ns1__getStockImageByteByCodeResponse ns1__getStockImageByteByCodeResponse;
	ns1__getStockImageByteByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImageByteByCode(soap, &soap_tmp___ns1__getStockImageByteByCode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImageByteByCode(soap, &soap_tmp___ns1__getStockImageByteByCode, "-ns1:getStockImageByteByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImageByteByCode(soap_tmp___ns1__getStockImageByteByCode.ns1__getStockImageByteByCode, &ns1__getStockImageByteByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImageByteByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImageByteByCodeResponse.soap_put(soap, "ns1:getStockImageByteByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImageByteByCodeResponse.soap_put(soap, "ns1:getStockImageByteByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImage_USCOREkByCode(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImage_USCOREkByCode soap_tmp___ns1__getStockImage_USCOREkByCode;
	_ns1__getStockImage_USCOREkByCodeResponse ns1__getStockImage_USCOREkByCodeResponse;
	ns1__getStockImage_USCOREkByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImage_USCOREkByCode(soap, &soap_tmp___ns1__getStockImage_USCOREkByCode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImage_USCOREkByCode(soap, &soap_tmp___ns1__getStockImage_USCOREkByCode, "-ns1:getStockImage_kByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImage_USCOREkByCode(soap_tmp___ns1__getStockImage_USCOREkByCode.ns1__getStockImage_USCOREkByCode, &ns1__getStockImage_USCOREkByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImage_USCOREkByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImage_USCOREkByCodeResponse.soap_put(soap, "ns1:getStockImage_kByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImage_USCOREkByCodeResponse.soap_put(soap, "ns1:getStockImage_kByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImage_USCOREkByteByCode(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImage_USCOREkByteByCode soap_tmp___ns1__getStockImage_USCOREkByteByCode;
	_ns1__getStockImage_USCOREkByteByCodeResponse ns1__getStockImage_USCOREkByteByCodeResponse;
	ns1__getStockImage_USCOREkByteByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImage_USCOREkByteByCode(soap, &soap_tmp___ns1__getStockImage_USCOREkByteByCode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImage_USCOREkByteByCode(soap, &soap_tmp___ns1__getStockImage_USCOREkByteByCode, "-ns1:getStockImage_kByteByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImage_USCOREkByteByCode(soap_tmp___ns1__getStockImage_USCOREkByteByCode.ns1__getStockImage_USCOREkByteByCode, &ns1__getStockImage_USCOREkByteByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImage_USCOREkByteByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImage_USCOREkByteByCodeResponse.soap_put(soap, "ns1:getStockImage_kByteByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImage_USCOREkByteByCodeResponse.soap_put(soap, "ns1:getStockImage_kByteByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockInfoByCode(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockInfoByCode soap_tmp___ns1__getStockInfoByCode;
	_ns1__getStockInfoByCodeResponse ns1__getStockInfoByCodeResponse;
	ns1__getStockInfoByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockInfoByCode(soap, &soap_tmp___ns1__getStockInfoByCode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockInfoByCode(soap, &soap_tmp___ns1__getStockInfoByCode, "-ns1:getStockInfoByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockInfoByCode(soap_tmp___ns1__getStockInfoByCode.ns1__getStockInfoByCode, &ns1__getStockInfoByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockInfoByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockInfoByCodeResponse.soap_put(soap, "ns1:getStockInfoByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockInfoByCodeResponse.soap_put(soap, "ns1:getStockInfoByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImageByCode_(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImageByCode_ soap_tmp___ns1__getStockImageByCode_;
	_ns1__getStockImageByCodeResponse ns1__getStockImageByCodeResponse;
	ns1__getStockImageByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImageByCode_(soap, &soap_tmp___ns1__getStockImageByCode_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImageByCode_(soap, &soap_tmp___ns1__getStockImageByCode_, "-ns1:getStockImageByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImageByCode_(soap_tmp___ns1__getStockImageByCode_.ns1__getStockImageByCode, &ns1__getStockImageByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImageByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImageByCodeResponse.soap_put(soap, "ns1:getStockImageByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImageByCodeResponse.soap_put(soap, "ns1:getStockImageByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImageByteByCode_(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImageByteByCode_ soap_tmp___ns1__getStockImageByteByCode_;
	_ns1__getStockImageByteByCodeResponse ns1__getStockImageByteByCodeResponse;
	ns1__getStockImageByteByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImageByteByCode_(soap, &soap_tmp___ns1__getStockImageByteByCode_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImageByteByCode_(soap, &soap_tmp___ns1__getStockImageByteByCode_, "-ns1:getStockImageByteByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImageByteByCode_(soap_tmp___ns1__getStockImageByteByCode_.ns1__getStockImageByteByCode, &ns1__getStockImageByteByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImageByteByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImageByteByCodeResponse.soap_put(soap, "ns1:getStockImageByteByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImageByteByCodeResponse.soap_put(soap, "ns1:getStockImageByteByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImage_USCOREkByCode_(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImage_USCOREkByCode_ soap_tmp___ns1__getStockImage_USCOREkByCode_;
	_ns1__getStockImage_USCOREkByCodeResponse ns1__getStockImage_USCOREkByCodeResponse;
	ns1__getStockImage_USCOREkByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImage_USCOREkByCode_(soap, &soap_tmp___ns1__getStockImage_USCOREkByCode_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImage_USCOREkByCode_(soap, &soap_tmp___ns1__getStockImage_USCOREkByCode_, "-ns1:getStockImage_kByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImage_USCOREkByCode_(soap_tmp___ns1__getStockImage_USCOREkByCode_.ns1__getStockImage_USCOREkByCode, &ns1__getStockImage_USCOREkByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImage_USCOREkByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImage_USCOREkByCodeResponse.soap_put(soap, "ns1:getStockImage_kByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImage_USCOREkByCodeResponse.soap_put(soap, "ns1:getStockImage_kByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockImage_USCOREkByteByCode_(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockImage_USCOREkByteByCode_ soap_tmp___ns1__getStockImage_USCOREkByteByCode_;
	_ns1__getStockImage_USCOREkByteByCodeResponse ns1__getStockImage_USCOREkByteByCodeResponse;
	ns1__getStockImage_USCOREkByteByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockImage_USCOREkByteByCode_(soap, &soap_tmp___ns1__getStockImage_USCOREkByteByCode_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockImage_USCOREkByteByCode_(soap, &soap_tmp___ns1__getStockImage_USCOREkByteByCode_, "-ns1:getStockImage_kByteByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockImage_USCOREkByteByCode_(soap_tmp___ns1__getStockImage_USCOREkByteByCode_.ns1__getStockImage_USCOREkByteByCode, &ns1__getStockImage_USCOREkByteByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockImage_USCOREkByteByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockImage_USCOREkByteByCodeResponse.soap_put(soap, "ns1:getStockImage_kByteByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockImage_USCOREkByteByCodeResponse.soap_put(soap, "ns1:getStockImage_kByteByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getStockInfoByCode_(ChinaStockWebServiceSoapService *soap)
{	struct __ns1__getStockInfoByCode_ soap_tmp___ns1__getStockInfoByCode_;
	_ns1__getStockInfoByCodeResponse ns1__getStockInfoByCodeResponse;
	ns1__getStockInfoByCodeResponse.soap_default(soap);
	soap_default___ns1__getStockInfoByCode_(soap, &soap_tmp___ns1__getStockInfoByCode_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getStockInfoByCode_(soap, &soap_tmp___ns1__getStockInfoByCode_, "-ns1:getStockInfoByCode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStockInfoByCode_(soap_tmp___ns1__getStockInfoByCode_.ns1__getStockInfoByCode, &ns1__getStockInfoByCodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getStockInfoByCodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getStockInfoByCodeResponse.soap_put(soap, "ns1:getStockInfoByCodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getStockInfoByCodeResponse.soap_put(soap, "ns1:getStockInfoByCodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
